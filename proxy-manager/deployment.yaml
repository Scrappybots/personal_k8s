apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: nginx-proxy-scc
  namespace: proxy-manager
allowPrivilegeEscalation: false
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
volumes:
- emptyDir
---
apiVersion: v1
kind: Namespace
metadata:
  name: proxy-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-proxy-sa
  namespace: proxy-manager
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: proxy-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: letsencrypt-pvc
  namespace: proxy-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-12-19T21:51:05Z"
  labels:
    app: nginx-proxy-pod
  name: nginx-proxy-pod
  namespace: proxy-manager
spec:
  serviceAccountName: nginx-proxy-sa
  initContainers:
  - name: init-permissions
    image: busybox
    command: ['sh', '-c', 'mkdir -p /run/s6 /run/service && chmod -R 777 /run/s6 /run/service']
    volumeMounts:
    - mountPath: /run/s6
      name: run-s6
    - mountPath: /run/service
      name: run-service
  containers:
  - env:
    - name: TERM
      value: xterm
    image: docker.io/jc21/nginx-proxy-manager:latest
    name: nginx-proxy
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        memory: 512Mi
        cpu: 500m
      requests:
        memory: 256Mi
        cpu: 250m
    ports:
    - name: http
      containerPort: 80
    - name: http-admin
      containerPort: 81
    - name: https
      containerPort: 443
    stdin: true
    tty: true
    volumeMounts:
    - mountPath: /data
      name: data-pvc
    - mountPath: /etc/letsencrypt
      name: letsencrypt-pvc
    - mountPath: /run/s6
      name: run-s6
    - mountPath: /run/service
      name: run-service
  volumes:
  - name: data-pvc
    persistentVolumeClaim:
      claimName: data-pvc
  - name: letsencrypt-pvc
    persistentVolumeClaim:
      claimName: letsencrypt-pvc
  - name: run-s6
    emptyDir: {}
  - name: run-service
    emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-proxy-service
  name: nginx-proxy-service
  namespace: proxy-manager
spec:
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 80
    nodePort: 30080
  - port: 81
    name: http-admin
    protocol: TCP
    targetPort: 81
    nodePort: 30081
  - port: 443
    name: https
    protocol: TCP
    targetPort: 443
    nodePort: 30443
  selector:
    app: nginx-proxy-pod
  type: NodePort